title: $:/plugins/BTC/tiddlywiki-multi-columns/CSS/dragndrop
tags: $:/tags/Stylesheet

\define tiddler-frame-transitions()

.btc-river-inner > .tc-tiddler-view-frame > .tc-tiddler-frame, .btc-river-inner > .tc-tiddler-edit-frame > .tc-tiddler-frame {
	transition: margin-top {{$:/config/AnimationDuration}}ms cubic-bezier(0.645, 0.045, 0.355, 1), margin-bottom {{$:/config/AnimationDuration}}ms cubic-bezier(0.645, 0.045, 0.355, 1);
}

\end

\define position-start-tiddlers-no-copying()
\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline macrocallblock

.btc-river-$(currentRiver)$ .btc-river-inner > [data-tiddler-title="$(startingNextTiddlerCSSEscaped)$"].tc-tiddler-view-frame > .tc-tiddler-frame, .btc-river-$(currentRiver)$ .btc-river-inner > [data-tiddler-title="$(startingNextTiddlerCSSEscaped)$"].tc-tiddler-edit-frame > .tc-tiddler-frame {
	transition: none;
}

.btc-river-$(currentRiver)$ [data-tiddler-title="$(startingNextTiddlerCSSEscaped)$"] .tc-tiddler-frame {
	margin-top: calc({{$:/state/dragging!!height}}px + (2 * {{$:/config/story-river/tiddler-margin}}px));
}

\end

\define position-start-tiddlers-no-copying-nth-0()
\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline macrocallblock

.btc-river-$(currentRiver)$ [data-tiddler-title="$(startingNextTiddlerCSSEscaped)$"] .tc-tiddler-frame {
	margin-top: calc({{$:/state/dragging!!height}}px + {{$:/config/story-river/tiddler-margin}}px);
}

\end

\define position-start-tiddlers-copying()
\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline macrocallblock

.btc-river-$(currentRiver)$ .btc-river-inner > [data-tiddler-title="$(dragTiddlerCSSEscaped)$"].tc-tiddler-view-frame > .tc-tiddler-frame, .btc-river-$(currentRiver)$ .btc-river-inner > [data-tiddler-title="$(dragTiddlerCSSEscaped)$"].tc-tiddler-edit-frame > .tc-tiddler-frame {
	transition: none;
}

.btc-river-$(currentRiver)$ [data-tiddler-title="$(dragTiddlerCSSEscaped)$"] .tc-tiddler-frame {
	margin-top: calc({{$:/state/dragging!!height}}px + (2 * {{$:/config/story-river/tiddler-margin}}px));
}

\end

\define position-start-tiddlers-copying-nth-0()
\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline macrocallblock

.btc-river-$(currentRiver)$ [data-tiddler-title="$(dragTiddlerCSSEscaped)$"] .tc-tiddler-frame {
	margin-top: calc({{$:/state/dragging!!height}}px + {{$:/config/story-river/tiddler-margin}}px);
}

\end

\define target-tiddler-margin()
\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline macrocallblock

.btc-river-$(currentRiver)$ .tc-tiddler-view-frame:not([data-tiddler-title="$(targetTiddlerCSSEscaped)$"]) .tc-tiddler-frame, .btc-river-$(currentRiver)$ .tc-tiddler-edit-frame:not([data-tiddler-title="$(targetTiddlerCSSEscaped)$"]) .tc-tiddler-frame {
	margin-top: {{$:/config/story-river/tiddler-margin}}px;
}

.btc-river-$(currentRiver)$ .tc-tiddler-view-frame:first-of-type:not([data-tiddler-title="$(targetTiddlerCSSEscaped)$"]) .tc-tiddler-frame, .btc-river-$(currentRiver)$ .tc-tiddler-edit-frame:first-of-type:not([data-tiddler-title="$(targetTiddlerCSSEscaped)$"]) .tc-tiddler-frame {
	margin-top: 0;
}

.btc-river-$(currentRiver)$ [data-tiddler-title="$(targetTiddlerCSSEscaped)$"] .tc-tiddler-frame {
	margin-top: calc({{$:/state/dragging!!height}}px + (2 * {{$:/config/story-river/tiddler-margin}}px));
}

\end

\define target-tiddler-margin-nth-0()
\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline macrocallblock

.btc-river-$(currentRiver)$ [data-tiddler-title="$(targetTiddlerCSSEscaped)$"] .tc-tiddler-frame {
	margin-top: calc({{$:/state/dragging!!height}}px + {{$:/config/story-river/tiddler-margin}}px);
}

\end

<$list filter="[{$:/layout}match[$:/plugins/BTC/tiddlywiki-multi-columns/ui/Layout]then{$:/view}!match[muuri]]" variable="ignore">

.btc-droppable-top-half {
	position: absolute;
	top: calc(-{{$:/config/story-river/tiddler-margin}}px - {{$:/config/story-river/tiddler-border}}px);
	left: calc(-{{$:/config/story-river/padding}}px - {{$:/config/story-river/tiddler-border}}px);
	height: calc(50% + {{$:/config/story-river/tiddler-margin}}px + {{$:/config/story-river/tiddler-border}}px);
	width: calc(100% + (2 * {{$:/config/story-river/padding}}px) + (2 * {{$:/config/story-river/tiddler-border}}px));
	display: none;
	z-index: 501;
}

.tc-tiddler-view-frame:first-of-type .btc-droppable-top-half, .tc-tiddler-edit-frame:first-of-type .btc-droppable-top-half {
	top: calc(-{{$:/config/story-river/padding}}px - {{$:/config/story-river/tiddler-border}}px);
	height: calc(50% + {{$:/config/story-river/padding}}px + {{$:/config/story-river/tiddler-border}}px);
}

.btc-droppable-bottom-half {
	position: absolute;
	top: 50%;
	left: calc(-{{$:/config/story-river/padding}}px - {{$:/config/story-river/tiddler-border}}px);
	height: calc(50% + {{$:/config/story-river/tiddler-border}}px);
	width: calc(100% + (2 * {{$:/config/story-river/padding}}px) + (2 * {{$:/config/story-river/tiddler-border}}px));
	z-index: 501;
	display: none;
}

.btc-droppable-top-half.tc-dragover {
	height: calc(50% + (2 * {{$:/config/story-river/tiddler-margin}}px) + {{$:/state/dragging!!height}}px);
	top: calc(-{{$:/state/dragging!!height}}px - (2 * {{$:/config/story-river/tiddler-margin}}px));
}

.tc-tiddler-view-frame:first-of-type .btc-droppable-top-half.tc-dragover, .tc-tiddler-edit-frame:first-of-type .btc-droppable-top-half.tc-dragover {
	height: calc(50% + {{$:/config/story-river/tiddler-margin}}px + {{$:/config/story-river/padding}}px + {{$:/state/dragging!!height}}px);
	top: calc(-{{$:/state/dragging!!height}}px - {{$:/config/story-river/tiddler-margin}}px - {{$:/config/story-river/padding}}px);
}

.btc-droppable-bottom-half.tc-dragover {
	height: calc(50% + {{$:/config/story-river/tiddler-margin}}px + {{$:/state/dragging!!height}}px);
}

<$list filter="[{$:/state/dragging}match[yes]]">

.btc-droppable-top-half, .btc-droppable-bottom-half {
	display: block;
}

<$set name="dragTiddler" value={{$:/state/dragging!!drag-tiddler}}>

<$set name="dragTiddlerCSSEscaped" value={{{ [<dragTiddler>escapecss[]] }}}>

<<tiddler-frame-transitions>>

</$set>

</$set>

</$list>

<$set name="currentRiver" value={{$:/state/dragging!!river}}>

<$set name="story" value={{{ [[$:/StoryList-]addsuffix<currentRiver>!match[$:/StoryList-1]] ~[[$:/StoryList]] }}}>

<$set name="targetTiddler" value={{$:/state/dragging!!target}}>

<$set name="nextTiddler" value={{{ [list<story>after<targetTiddler>] }}}>

<$set name="margin" value={{$:/state/dragging!!margin}}>

<$set name="targetTiddlerCSSEscaped" value={{{ [<margin>match[top]then<targetTiddler>escapecss[]] :else[<margin>match[bottom]then<nextTiddler>escapecss[]] }}}>

<<target-tiddler-margin>>

<$list filter="[{$:/state/dragging!!nth}match[0]]">

<<target-tiddler-margin-nth-0>>

</$list>

</$set>

</$set>

</$set>

</$set>

</$set>

</$set>

<$list filter="[{$:/state/dragging}match[yes]]" variable="ignore">

.btc-activate-column-btn {
	display: none;
}

.btc-river-inner {
	height: 100%;
	/* position: absolute; */
	width: 100%;
}

.btc-river-inner > .tc-droppable {
	position: absolute;
	height: calc(100% - (2 * {{$:/config/story-river/padding}}px));
	width: calc(100% - (2 * {{$:/config/story-river/padding}}px));
}

</$list>

<$list filter="[{$:/config/story-river/dragging-enable}!match[no]]">

.tc-tiddler-frame img {
	-webkit-user-drag: none;
	-khtml-user-drag: none;
	-moz-user-drag: none;
	-o-user-drag: none;
	user-drag: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-o-user-select: none;
	-ms-user-select: none;
	user-select: none;
	touch-action: none;
	pointer-events: none;
}

</$list>

.btc-river-inner > .tc-tiddler-view-frame > .tc-draggable, .btc-river-inner > .tc-tiddler-edit-frame > .tc-draggable {
	cursor: default;
}

<$let currentRiver={{$:/state/dragging!!start-river}} dragTiddler={{$:/state/dragging!!drag-tiddler}} startingNextTiddler={{$:/state/dragging!!starting-next-tiddler}} startingNextTiddlerCSSEscaped={{{ [<startingNextTiddler>escapecss[]] }}} dragTiddlerCSSEscaped={{{ [<dragTiddler>escapecss[]] }}}>

<$list filter="[{$:/state/dragging!!copying}!match[yes]]">

<<position-start-tiddlers-no-copying>>

<$list filter="[{$:/state/dragging!!nth}match[0]]">

<<position-start-tiddlers-no-copying-nth-0>>

</$list>

</$list>

<$list filter="[{$:/state/dragging!!copying}match[yes]]">

<<position-start-tiddlers-copying>>

<$list filter="[{$:/state/dragging!!nth}match[0]]">

<<position-start-tiddlers-copying-nth-0>>

</$list>

</$list>

</$let>

</$list>