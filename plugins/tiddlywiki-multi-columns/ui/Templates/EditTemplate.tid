title: $:/plugins/BTC/tiddlywiki-multi-columns/ui/EditTemplate

\define delete-edittemplate-state-tiddlers() <$action-deletetiddler $filter="[<newFieldNameTiddler>] [<newFieldValueTiddler>] [<newFieldNameInputTiddler>] [<newFieldNameSelectionTiddler>] [<newTagNameTiddler>] [<newTagNameInputTiddler>] [<newTagNameSelectionTiddler>] [<typeInputTiddler>] [<typeSelectionTiddler>]"/>
\define save-tiddler-actions()
<$action-sendmessage $message="tm-add-tag" $param={{{ [<newTagNameTiddler>get[text]] }}}/>
<$action-sendmessage $message="tm-add-field" $name={{{ [<newFieldNameTiddler>get[text]] }}} $value={{{ [<newFieldValueTiddler>get[text]] }}}/>
<$list filter="[list[$:/columns]!match<currentColumn>]" variable="column">
<$set name="storyList" value={{{ [[$:/StoryList-]addsuffix<column>!match[$:/StoryList-1]] ~[[$:/StoryList]] }}}>
<$list filter="[<storyList>contains<currentTiddler>]" variable="ignore">
<$set name="index" value={{{ [list<storyList>allbefore<currentTiddler>add[1]] }}}>
<$let nextTiddler={{{ [list<storyList>zth<index>] }}} viewTiddler={{{ [<currentTiddler>get[draft.of]] }}}>
<$action-listops $tiddler=<<storyList>> $subfilter="+[insertbefore<viewTiddler>,<nextTiddler>]"/>
<$action-listops $tiddler=<<storyList>> $subfilter="-[<currentTiddler>]"/>
</$let>
</$set>
</$list>
</$set>
</$list>
<<delete-edittemplate-state-tiddlers>>
<$action-sendmessage $message="tm-save-tiddler"/>
\end
\define cancel-delete-tiddler-actions(message)
<$list filter="[[$message$]match[delete]]" variable="ignore">
<$let deleteTiddlerViewMode={{{ [<currentTiddler>get[draft.of]] }}} deleteTiddlerEditMode=<<currentTiddler>>>
<$list filter="[list[$:/columns]!match<currentColumn>]" variable="column">
<$set name="storyList" value={{{ [[$:/StoryList-]addsuffix<column>!match[$:/StoryList-1]] ~[[$:/StoryList]] }}}>
<$list filter="[<storyList>contains<deleteTiddlerViewMode>]" variable="ignore">
<$action-listops $tiddler=<<storyList>> $subfilter="-[<deleteTiddlerViewMode>]"/>
</$list>
<$list filter="[<storyList>contains<deleteTiddlerEditMode>]" variable="ignore">
<$action-listops $tiddler=<<storyList>> $subfilter="-[<deleteTiddlerEditMode>]"/>
</$list>
</$set>
</$list>
</$let>
<<delete-edittemplate-state-tiddlers>>
<$action-sendmessage $message="tm-delete-tiddler"/>
</$list>
<$list filter="[[$message$]match[cancel]]" variable="ignore">
<$list filter="[<currentTiddler>get[draft.of]is[missing]]" variable="ignore" emptyMessage="""
<$list filter="[list[$:/columns]!match<currentColumn>]" variable="column">
<$set name="storyList" value={{{ [[$:/StoryList-]addsuffix<column>!match[$:/StoryList-1]] ~[[$:/StoryList]] }}}>
<$list filter="[<storyList>contains<currentTiddler>]" variable="ignore">
<$set name="index" value={{{ [list<storyList>allbefore<currentTiddler>add[1]] }}}>
<$let nextTiddler={{{ [list<storyList>zth<index>] }}} viewTiddler={{{ [<currentTiddler>get[draft.of]] }}}>
<$action-listops $tiddler=<<storyList>> $subfilter="+[insertbefore<viewTiddler>,<nextTiddler>]"/>
<$action-listops $tiddler=<<storyList>> $subfilter="-[<currentTiddler>]"/>
</$let>
</$set>
</$list>
</$set>
</$list>
""">
<$list filter="[list[$:/columns]!match<currentColumn>]" variable="column">
<$set name="storyList" value={{{ [[$:/StoryList-]addsuffix<column>!match[$:/StoryList-1]] ~[[$:/StoryList]] }}}>
<$list filter="[<storyList>contains<currentTiddler>]" variable="ignore">
<$action-listops $tiddler=<<storyList>> $subfilter="-[<currentTiddler>]"/>
</$list>
</$set>
</$list>
</$list>
<<delete-edittemplate-state-tiddlers>>
<$action-sendmessage $message="tm-cancel-tiddler"/>
</$list>
\end
\define drag-start-actions()
<$action-setfield $tiddler="$:/state/dragging" nth={{{ [list<tv-story-list>allbefore<currentTiddler>count[]] }}} height=<<tv-selectednode-height>> width=<<tv-selectednode-width>> start-river=<<currentColumn>> starting-next-tiddler={{{ [list<tv-story-list>after<currentTiddler>] }}}/><$action-setfield $tiddler="$:/state/dragging" drag-tiddler=<<currentTiddler>> next-tiddler={{{ [list<tv-story-list>after<currentTiddler>] }}} from-index={{{ [list<tv-story-list>allbefore<currentTiddler>count[]] }}} from-story=<<tv-story-list>> target={{{ [list<tv-story-list>after<currentTiddler>] }}}/><$action-setfield $tiddler="$:/state/DisableInsertAnimation" text="yes"/><$action-setfield $tiddler="$:/state/DisableRemoveAnimation" text="yes"/><$action-setfield $tiddler="$:/state/dragging" text="yes"/><$list filter="[<modifier>!match[ctrl]]" variable="ignore" emptyMessage="""<$action-setfield $tiddler="$:/state/dragging" copying="yes"/>"""><$action-listops $tiddler=<<tv-story-list>> $subfilter="-[<currentTiddler>]"/></$list>
\end
\define drag-end-actions()
<$list filter="[[$:/state/drag-handled]is[missing]]" emptyMessage="""
<$action-deletetiddler $tiddler="$:/state/dragging"/><$action-deletetiddler $tiddler="$:/state/drag-handled"/>
""">
<$set name="fromStoryList" value={{$:/state/dragging!!from-story}}>
<$set name="fromIndex" value={{$:/state/dragging!!from-index}}>
<$set name="listBeforeTiddler" value={{{ [list<fromStoryList>zth<fromIndex>] }}}>
<$set name="actionTiddler" value={{{ [enlist<actionTiddler>] }}}>
<$action-listops $tiddler=<<fromStoryList>> $subfilter="+[insertbefore<actionTiddler>,<listBeforeTiddler>]"/>
<$action-deletetiddler $tiddler="$:/state/dragging"/><$action-deletetiddler $tiddler="$:/state/drag-handled"/>
</$set>
</$set>
</$set>
</$set>
</$list>
\end
\define top-drop-actions()
<$action-setfield $tiddler="$:/state/drag-handled" text="yes"/><$action-listops $tiddler=<<tv-story-list>> $subfilter="+[insertbefore<actionTiddler>,<currentTiddler>]"/>
\end
\define bottom-drop-actions()
<$action-setfield $tiddler="$:/state/drag-handled" text="yes"/>
<$set name="nextTiddler" value={{{ [list<tv-story-list>after<currentTiddler>] }}}>
<$list filter="[<nextTiddler>match[]]" emptyMessage="""
<$action-listops $tiddler=<<tv-story-list>> $subfilter="+[insertbefore<actionTiddler>,<nextTiddler>]"/>
""">
<$action-listops $tiddler=<<tv-story-list>> $subfilter="[<actionTiddler>]"/>
</$list>
</$set>
\end
<div data-tiddler-title=<<currentTiddler>> data-tags={{!!tags}} class={{{ tc-tiddler-edit-frame tc-tiddler-zindex-frame [<currentTiddler>is[tiddler]then[tc-tiddler-exists]] [<currentTiddler>is[missing]!is[shadow]then[tc-tiddler-missing]] [<currentTiddler>is[shadow]then[tc-tiddler-exists tc-tiddler-shadow]] [<currentTiddler>is[system]then[tc-tiddler-system]] [{!!class}] [<currentTiddler>tags[]encodeuricomponent[]addprefix[tc-tagged-]] +[join[ ]] }}}>
<$fieldmangler>
<$draggable enable={{$:/config/story-river/dragging-enable}} tiddler=<<currentTiddler>> startactions=<<drag-start-actions>> endactions=<<drag-end-actions>> class="tc-tiddler-frame">
<$vars storyTiddler=<<currentTiddler>> newTagNameTiddler=<<qualify "$:/temp/NewTagName">> newFieldNameTiddler=<<qualify "$:/temp/NewFieldName">> newFieldValueTiddler=<<qualify "$:/temp/NewFieldValue">> newFieldNameInputTiddler=<<qualify "$:/temp/NewFieldName/input">> newFieldNameSelectionTiddler=<<qualify "$:/temp/NewFieldName/selected-item">> newTagNameInputTiddler=<<qualify "$:/temp/NewTagName/input">> newTagNameSelectionTiddler=<<qualify "$:/temp/NewTagName/selected-item">> typeInputTiddler=<<qualify "$:/temp/Type/input">> typeSelectionTiddler=<<qualify "$:/temp/Type/selected-item">>>
<$keyboard key="((cancel-edit-tiddler))" actions=<<cancel-delete-tiddler-actions "cancel">> tag="div">
<$keyboard key="((save-tiddler))" actions=<<save-tiddler-actions>> tag="div">
<$list filter="[all[shadows+tiddlers]tag[$:/tags/EditTemplate]!has[draft.of]]" variable="listItem">
<$set name="tv-config-toolbar-class" filter="[<tv-config-toolbar-class>] [<listItem>encodeuricomponent[]addprefix[tc-btn-]]">
<$transclude tiddler=<<listItem>>/>
</$set>
</$list>
</$keyboard>
</$keyboard>
</$vars>
<$droppable class="tc-droppable-top-half" actions=<<top-drop-actions>> dragenteractions="""<$action-setfield $tiddler="$:/state/dragging" starting-next-tiddler="" copying="" target=<<currentTiddler>> margin="top" nth={{{ [list<tv-story-list>allbefore<currentTiddler>count[]] }}} river=<<currentColumn>> next-tiddler="" from-index={{{ [list<tv-story-list>allbefore<currentTiddler>count[]] }}} from-story=<<tv-story-list>>/>""">
</$droppable>
<$droppable class="tc-droppable-bottom-half" actions=<<bottom-drop-actions>> dragenteractions="""<$action-setfield $tiddler="$:/state/dragging" starting-next-tiddler="" copying="" target=<<currentTiddler>> margin="bottom" nth={{{ [list<tv-story-list>allbefore<currentTiddler>count[]add[1]] }}} river=<<currentColumn>> next-tiddler="" from-index={{{ [list<tv-story-list>allbefore<currentTiddler>count[]add[1]] }}} from-story=<<tv-story-list>>/>""">
</$droppable>
</$draggable>
</$fieldmangler>
</div>
