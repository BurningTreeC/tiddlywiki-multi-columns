title: $:/plugins/BTC/tiddlywiki-multi-columns/ui/ViewTemplate

\whitespace trim
\define folded-state()
$:/state/folded/$(currentTiddler)$
\end
\define navigate-actions-not-match-shift-message()
<$navigator story=<<tv-story-list>> history=<<tv-history-list>> openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromOutsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
<$action-navigate $to=<<event-navigateTo>>/>
</$navigator>
\end
\define navigate-actions()
<$list filter="[all[tiddlers]prefix[$:/state/story-river/full-screen/]]" variable="fullScreenTiddler">
<$action-deletetiddler $tiddler=<<fullScreenTiddler>>/>
</$list>
<$list filter="[<modifier>match[shift]]" variable="ignore" emptyMessage=<<navigate-actions-not-match-shift-message>>>
<$set name="nextColumn" value={{{ [<currentColumn>add[1]] }}}>
<$let storyList={{{ [[$:/StoryList-]addsuffix<nextColumn>] }}} historyList={{{ [[$:/HistoryList-]addsuffix<nextColumn>] }}}>
<$list filter="[[$:/columns]!contains<nextColumn>]" variable="ignore">
<$action-listops $tiddler="$:/columns" $subfilter="[<nextColumn>]"/>
</$list>
<$navigator story=<<storyList>> history=<<historyList>> openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromOutsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
<$action-navigate $to=<<event-navigateTo>>/>
</$navigator>
</$let>
</$set>
</$list>
\end
\define cancel-delete-tiddler-actions(message)
<$list filter="[all[tiddlers]prefix[$:/state/story-river/full-screen/]]" variable="fullScreenTiddler">
<$action-deletetiddler $tiddler=<<fullScreenTiddler>>/>
</$list>
<$let scrollTiddler={{{ [list<tv-story-list>after<currentTiddler>] ~[list<tv-story-list>before<currentTiddler>] }}} scrollTiddlerCSSEscaped={{{ [<scrollTiddler>escapecss[]] }}}>
	<$action-setfield $tiddler=<<tv-history-list>> current-tiddler=<<scrollTiddler>>/>
	<$action-sendmessage $message="tm-$message$-tiddler"/>
</$let>
\end
\define edit-tiddler-actions()
<$list filter="[[$:/state/story-river/full-screen/]addsuffix<currentTiddler>!is[missing]]" variable="ignore" emptyMessage="""
<$list filter="[all[tiddlers]prefix[$:/state/story-river/full-screen/]]" variable="fullScreenTiddler">
<$action-deletetiddler $tiddler=<<fullScreenTiddler>>/>
</$list>
""">
<$action-setfield $tiddler="$:/state/DisableInsertAnimation" text="yes"/>
<$action-setfield $tiddler="$:/state/DisableRemoveAnimation" text="yes"/>
<$action-setfield $tiddler={{{ [[$:/state/story-river/full-screen/]addsuffix[Draft of ']addsuffix<currentTiddler>addsuffix[']] }}} text="yes" column=<<currentColumn>>/>
<$list filter="[all[tiddlers]prefix[$:/state/story-river/full-screen/]] -[[$:/state/story-river/full-screen/]addsuffix[Draft of ']addsuffix<currentTiddler>addsuffix[']]" variable="fullScreenTiddler">
<$action-deletetiddler $tiddler=<<fullScreenTiddler>>/>
</$list>
</$list>
<$action-sendmessage $message="tm-edit-tiddler"/>
\end
\import [all[shadows+tiddlers]tag[$:/tags/Macro/View]!has[draft.of]]
<$vars storyTiddler=<<currentTiddler>> tiddlerInfoState=<<qualify "$:/state/popup/tiddler-info">>>
<div data-tiddler-title=<<currentTiddler>> data-tags={{!!tags}} class={{{ tc-tiddler-view-frame btc-tiddler-zindex-frame [<currentTiddler>is[tiddler]then[tc-tiddler-exists]] [<currentTiddler>is[missing]!is[shadow]then[tc-tiddler-missing]] [<currentTiddler>is[shadow]then[tc-tiddler-exists tc-tiddler-shadow]] [<currentTiddler>is[shadow]is[tiddler]then[tc-tiddler-overridden-shadow]] [<currentTiddler>is[system]then[tc-tiddler-system]] [{!!class}] [<currentTiddler>tags[]encodeuricomponent[]addprefix[tc-tagged-]] +[join[ ]] }}}>
<$draggable enable={{{ [{$:/config/story-river/dragging-enable}match[yes]addsuffix[$:/state/story-river/full-screen/]addsuffix<currentTiddler>removeprefix[yes]is[missing]then[yes]] ~[[no]] }}} tiddler=<<currentTiddler>> startactions=<<btc-drag-start-actions>> endactions=<<btc-drag-end-actions>> class="tc-tiddler-frame">
<$messagecatcher $tm-navigate=<<navigate-actions>>>
<$list filter="[all[shadows+tiddlers]tag[$:/tags/ViewTemplate]!has[draft.of]]" variable="listItem">
<$transclude tiddler=<<listItem>>/>
</$list>
</$messagecatcher>
<$droppable class="btc-droppable-top-half" actions=<<btc-top-drop-actions>> dragenteractions="""<$action-setfield $tiddler="$:/state/dragging" starting-next-tiddler="" copying="" target=<<currentTiddler>> margin="top" nth={{{ [list<tv-story-list>allbefore<currentTiddler>count[]] }}} river=<<currentColumn>> next-tiddler="" from-index={{{ [list<tv-story-list>allbefore<currentTiddler>count[]] }}} from-story=<<tv-story-list>>/>""">
</$droppable>
<$droppable class="btc-droppable-bottom-half" actions=<<btc-bottom-drop-actions>> dragenteractions="""<$action-setfield $tiddler="$:/state/dragging" starting-next-tiddler="" copying="" target=<<currentTiddler>> margin="bottom" nth={{{ [list<tv-story-list>allbefore<currentTiddler>count[]add[1]] }}} river=<<currentColumn>> next-tiddler="" from-index={{{ [list<tv-story-list>allbefore<currentTiddler>count[]add[1]] }}} from-story=<<tv-story-list>>/>""">
</$droppable>
</$draggable>
</div>
</$vars>